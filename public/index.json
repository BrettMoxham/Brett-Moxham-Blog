[{"authors":["admin"],"categories":null,"content":"Brett Moxham is currently employed at Cabelas Canada as an Inventory Coordinator. He faciliates the movement of inventory between the various distribution centers to Canadian retail stores. When he isn\u0026rsquo;t curling or watching baseball, he is learning R and is an aspiring data analyst.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/brett-moxham/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/brett-moxham/","section":"authors","summary":"Brett Moxham is currently employed at Cabelas Canada as an Inventory Coordinator. He faciliates the movement of inventory between the various distribution centers to Canadian retail stores. When he isn\u0026rsquo;t curling or watching baseball, he is learning R and is an aspiring data analyst.","tags":null,"title":"Brett Moxham","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":[],"categories":[],"content":"\rlibrary(tidyverse)\rlibrary(lubridate) #used to parse date and time in our data cleaning step.\rlibrary(gt)\rObjective\rTaking the data set provided by the UCI Machine Learning Repository, we want to take an exploratory data analysis approach to gain insights into this store’s customer. This data set contains transactions occurring between 01/12/2010 and 09/12/2011 for a UK-based and registered non-store online retail.The company mainly sells unique all-occasion gifts. Many customers of the company are wholesalers.\nA few things that we want to look at:\n\rSales by day\rUnit drivers\rDollar drivers\rOrders/order value by country\r\r\rData\rAs stated above, we’ve taken data provided from the UCI Machine Learning Repository. You can find a link to the actual data here.\nonline_retail \u0026lt;- readxl::read_xlsx(\u0026quot;C:/Users/Brett/Desktop/Github/Random Projects/Consumer Data - EDA/Online Retail.xlsx\u0026quot;) ##reads in our data\ronline_retail \u0026lt;- online_retail %\u0026gt;% ##converts character variables to factor\rmutate_if(is.character, as.factor) %\u0026gt;% janitor::clean_names() ## cleans up variable names. \rData Cleaning\rLet’s take a quick first look at our data so we can see what we are dealing with.\nskimr::skim(online_retail)\r\rTable 1: Data summary\r\rName\ronline_retail\r\rNumber of rows\r541909\r\rNumber of columns\r8\r\r_______________________\r\r\rColumn type frequency:\r\r\rfactor\r4\r\rnumeric\r3\r\rPOSIXct\r1\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: factor\n\r\rskim_variable\rn_missing\rcomplete_rate\rordered\rn_unique\rtop_counts\r\r\r\rinvoice_no\r0\r1\rFALSE\r25900\r573: 1114, 581: 749, 581: 731, 580: 721\r\rstock_code\r0\r1\rFALSE\r4070\r851: 2313, 224: 2203, 850: 2159, 475: 1727\r\rdescription\r1454\r1\rFALSE\r4211\rWHI: 2369, REG: 2200, JUM: 2159, PAR: 1727\r\rcountry\r0\r1\rFALSE\r38\rUni: 495478, Ger: 9495, Fra: 8557, EIR: 8196\r\r\r\rVariable type: numeric\n\r\r\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\rquantity\r0\r1.00\r9.55\r218.08\r-80995.00\r1.00\r3.00\r10.00\r80995\r▁▁▇▁▁\r\runit_price\r0\r1.00\r4.61\r96.76\r-11062.06\r1.25\r2.08\r4.13\r38970\r▁▇▁▁▁\r\rcustomer_id\r135080\r0.75\r15287.69\r1713.60\r12346.00\r13953.00\r15152.00\r16791.00\r18287\r▇▇▇▇▇\r\r\r\rVariable type: POSIXct\n\r\r\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rmedian\rn_unique\r\r\r\rinvoice_date\r0\r1\r2010-12-01 08:26:00\r2011-12-09 12:50:00\r2011-07-19 17:17:00\r23260\r\r\r\rWe have over 540,000 different orders, of which we have 8 different data points on each.\rWe have data on:\n\rThe invoice number\rThe stock code\rThe stock description\rCountry of purchase\rQuantity purchased\rUnit price\rAnonymized customer ID number\rInvoice date\r\rMost of our data points are fully complete. However we are missing some item descriptions, quite a few (25%) of our customer ID’s. These two are not able to be imputed, and we can chalk up to data quality issues. There isn’t much that we can do to remedy this. Notice too, that we don’t have a total value of individual purchases, or a total dollar value of each invoice. These are important factors to consider. We can pretty simply create these variables. Let’s also add in some date variables that we may want to look at. Finally, when we look at our quantity tab, we see that the lowest value is -80995. Without being to verify, we must assume that this means that stock was returned to the store. It could be a data quality issue, but we have no way of knowing.\nNow that we have looked at our data, it is time to add in some extra variables that will help in our analysis. We will create a new data frame and call it sales.\nsales \u0026lt;- online_retail %\u0026gt;%\rmutate(item_value = unit_price*quantity) %\u0026gt;% group_by(invoice_no) %\u0026gt;% mutate(invoice_total_value = sum(item_value)) %\u0026gt;% ungroup() %\u0026gt;% mutate(date = date(invoice_date), #adds in the full date, strips time\rmonth = month(invoice_date), ## adds invoice month\rday = day(invoice_date), ## adds invoice day in month (1-31)\rweekday = wday(invoice_date), ## adds invoice weekday (1-7) need to find if they start week on monday or sunday\rhour = hour(invoice_date)) %\u0026gt;% ## adds invoice hour\rungroup() %\u0026gt;%\rfilter(!str_detect(description, \u0026quot;^[:lower:]+$\u0026quot;))## Found a bunch of item descriptions that seemed to be one off descriptions like \u0026quot;damaged\u0026quot;, \u0026quot;broken\u0026quot; etc.. This function removes those from the data set.\rskimr::skim(sales)\r\rTable 2: Data summary\r\rName\rsales\r\rNumber of rows\r540118\r\rNumber of columns\r15\r\r_______________________\r\r\rColumn type frequency:\r\r\rDate\r1\r\rfactor\r4\r\rnumeric\r9\r\rPOSIXct\r1\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: Date\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rmedian\rn_unique\r\r\r\rdate\r0\r1\r2010-12-01\r2011-12-09\r2011-07-20\r305\r\r\r\rVariable type: factor\n\r\rskim_variable\rn_missing\rcomplete_rate\rordered\rn_unique\rtop_counts\r\r\r\rinvoice_no\r0\r1\rFALSE\r24109\r573: 1114, 581: 749, 581: 731, 580: 721\r\rstock_code\r0\r1\rFALSE\r3954\r851: 2313, 224: 2200, 850: 2159, 475: 1727\r\rdescription\r0\r1\rFALSE\r4186\rWHI: 2369, REG: 2200, JUM: 2159, PAR: 1727\r\rcountry\r0\r1\rFALSE\r38\rUni: 493687, Ger: 9495, Fra: 8557, EIR: 8196\r\r\r\rVariable type: numeric\n\r\r\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\rquantity\r0\r1.00\r9.64\r218.00\r-80995.00\r1.00\r3.00\r10.00\r80995.0\r▁▁▇▁▁\r\runit_price\r0\r1.00\r4.63\r96.92\r-11062.06\r1.25\r2.08\r4.13\r38970.0\r▁▇▁▁▁\r\rcustomer_id\r133289\r0.75\r15287.69\r1713.60\r12346.00\r13953.00\r15152.00\r16791.00\r18287.0\r▇▇▇▇▇\r\ritem_value\r0\r1.00\r18.05\r379.44\r-168469.60\r3.48\r9.84\r17.40\r168469.6\r▁▁▇▁▁\r\rinvoice_total_value\r0\r1.00\r1343.76\r2372.20\r-168469.60\r288.99\r517.05\r1436.93\r168469.6\r▁▁▇▁▁\r\rmonth\r0\r1.00\r7.56\r3.51\r1.00\r5.00\r8.00\r11.00\r12.0\r▃▂▃▃▇\r\rday\r0\r1.00\r15.02\r8.66\r1.00\r7.00\r15.00\r22.00\r31.0\r▇▆▆▆▅\r\rweekday\r0\r1.00\r3.60\r1.61\r1.00\r2.00\r4.00\r5.00\r6.0\r▇▅▅▅▅\r\rhour\r0\r1.00\r13.08\r2.44\r6.00\r11.00\r13.00\r15.00\r20.0\r▁▅▇▆▁\r\r\r\rVariable type: POSIXct\n\r\r\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rmedian\rn_unique\r\r\r\rinvoice_date\r0\r1\r2010-12-01 08:26:00\r2011-12-09 12:50:00\r2011-07-20 11:22:00\r22050\r\r\r\rLooking at our new data frame, we have a lot more data to work with. We can now organize our data in so many different ways, such as hour of day, or day of the week. Speaking of day of the week, It looks like we only have sales day for day 6. Meaning that sales are not processed one day out of the week. We need to know whether Sunday or Monday equates to day 1 of 7.\nsales %\u0026gt;% filter(date == \u0026quot;2010-12-01\u0026quot;) %\u0026gt;% select(date, weekday)\r## # A tibble: 3,098 x 2\r## date weekday\r## \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2010-12-01 4\r## 2 2010-12-01 4\r## 3 2010-12-01 4\r## 4 2010-12-01 4\r## 5 2010-12-01 4\r## 6 2010-12-01 4\r## 7 2010-12-01 4\r## 8 2010-12-01 4\r## 9 2010-12-01 4\r## 10 2010-12-01 4\r## # ... with 3,088 more rows\rGoing back in the calendar, we know that December 1st 2020, starts on a Wednesday. This means that our week starts on Sunday, and by extension, that our store does not process sales on Saturday.\nWith our data in a more usable format, and some extra variables added, we can start our exploratory data analysis.\n\r\rExploratory Data Analysis\rSales Over Time\rFirst and foremost, let’s look at the sales over the year. Let’s see if anything stands out right off the top before we get into the nitty gritty.\nsales %\u0026gt;% group_by(date) %\u0026gt;% summarise(total = sum(invoice_total_value)) %\u0026gt;% mutate(flag = ifelse(total \u0026gt;= 8000000, T, F)) %\u0026gt;% ggplot(aes(date, total)) +\rgeom_col(aes(fill = flag)) +\rscale_y_continuous(labels = scales::dollar_format()) + scale_fill_manual(values = c(\u0026#39;#595959\u0026#39;, \u0026#39;red\u0026#39;))+\rscale_x_date(date_breaks = \u0026quot;months\u0026quot; , date_labels = \u0026quot;%b-%y\u0026quot;)+\rtheme_minimal()+\rtheme(text = element_text(family = \u0026quot;Nunito Bold\u0026quot;, face = \u0026quot;bold\u0026quot;),\rlegend.position = \u0026quot;none\u0026quot;,\rpanel.grid.major.x = element_blank(),\rpanel.grid.minor.x = element_blank()\r)+\rlabs(\rtitle = \u0026quot;Total Sales by Date\u0026quot;,\rx = \u0026quot;\u0026quot;,\ry = \u0026quot;\u0026quot;\r)\rWe’re looking at a graph of total sales over the year. We’ve highlighted total sales per day over $8,000,000. We see a large number of these days in December in both 2010 and 2011. We can assume that December is a big month for this company. We also see a day in August that exceeded $8,000,000. Let’s take a look at that day and see if anything sticks out.\nsales %\u0026gt;% filter(month == 8) %\u0026gt;% group_by(date) %\u0026gt;% summarise(total = sum(invoice_total_value)) %\u0026gt;% filter(total \u0026gt;= 8000000)\r## # A tibble: 1 x 2\r## date total\r## \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2011-08-11 9209482.\rAugust 11th, 2011 had a total sales of 9.2 million. Let’s dive in and see if any orders stand out.\nsales %\u0026gt;% filter(date == \u0026quot;2011-08-11\u0026quot;) %\u0026gt;% group_by(invoice_no) %\u0026gt;% summarize(total = sum(invoice_total_value)) %\u0026gt;% arrange(-total) %\u0026gt;% head(20) %\u0026gt;% knitr::kable()\r\r\rinvoice_no\rtotal\r\r\r\r562955\r5887072.78\r\r563076\r2278928.54\r\r563074\r205693.84\r\r563093\r200606.56\r\r562980\r130418.40\r\r563016\r34799.80\r\r562949\r32643.02\r\r563094\r28079.52\r\r562984\r24586.05\r\r562939\r23787.36\r\r562965\r22004.40\r\r563022\r21986.85\r\r562964\r19270.80\r\r563061\r16496.20\r\r563023\r16030.20\r\r563017\r15675.52\r\r563020\r14523.36\r\r563019\r14297.28\r\r563037\r14077.50\r\r563012\r13375.53\r\r\r\rWe’ve got two invoices well over $200,000. Let’s examine those a little bit.\nsales %\u0026gt;% filter(invoice_no == 562955) %\u0026gt;% head(5) %\u0026gt;% select(-c(invoice_date, day, month, weekday, hour)) %\u0026gt;% knitr::kable()\r\r\r\rinvoice_no\rstock_code\rdescription\rquantity\runit_price\rcustomer_id\rcountry\ritem_value\rinvoice_total_value\rdate\r\r\r\r562955\r22469\rHEART OF WICKER SMALL\r4\r4.13\rNA\rUnited Kingdom\r16.52\r16677.26\r2011-08-11\r\r562955\r22470\rHEART OF WICKER LARGE\r4\r5.79\rNA\rUnited Kingdom\r23.16\r16677.26\r2011-08-11\r\r562955\r22485\rSET OF 2 WOODEN MARKET CRATES\r3\r24.96\rNA\rUnited Kingdom\r74.88\r16677.26\r2011-08-11\r\r562955\r22488\rNATURAL SLATE RECTANGLE CHALKBOARD\r9\r3.29\rNA\rUnited Kingdom\r29.61\r16677.26\r2011-08-11\r\r562955\r22501\rPICNIC BASKET WICKER LARGE\r15\r20.79\rNA\rUnited Kingdom\r311.85\r16677.26\r2011-08-11\r\r\r\rWell this first order, we don’t have a customer ID. It would be worth while to find who created this invoice, so we can execute targeted marketing for future repurchases!\nsales %\u0026gt;% filter(invoice_no == 563076) %\u0026gt;% head(5) %\u0026gt;% select(-c(invoice_date, day, month, weekday, hour)) %\u0026gt;% knitr::kable()\r\r\r\r\rinvoice_no\rstock_code\rdescription\rquantity\runit_price\rcustomer_id\rcountry\ritem_value\rinvoice_total_value\rdate\r\r\r\r563076\r22795\rSWEETHEART RECIPE BOOK STAND\r16\r5.95\r14646\rNetherlands\r95.20\r19150.66\r2011-08-11\r\r563076\r23176\rABC TREASURE BOOK BOX\r72\r1.95\r14646\rNetherlands\r140.40\r19150.66\r2011-08-11\r\r563076\r22399\rMAGNETS PACK OF 4 CHILDHOOD MEMORY\r108\r1.06\r14646\rNetherlands\r114.48\r19150.66\r2011-08-11\r\r563076\r23268\rSET OF 2 CERAMIC CHRISTMAS REINDEER\r384\r1.25\r14646\rNetherlands\r480.00\r19150.66\r2011-08-11\r\r563076\r23270\rSET OF 2 CERAMIC PAINTED HEARTS\r192\r1.25\r14646\rNetherlands\r240.00\r19150.66\r2011-08-11\r\r\r\rThis is a big order out of the Netherlands that we do actually have a customer ID for. When we do our analysis on where our buying comes from, we should pay attention to the Netherlands. Perhaps this one buyer makes up a large portion of that countries total buying.\n\rUnit Drivers\rLet’s identify the largest unit drivers over the year. When we look at the data set, when we look at item descriptions with 1 or 2 units, they seem to be either 1 off or just data entry errors. We could process these out, but for the sake of this exercise, I’m going to filter to items that have a total unit value of at least 3.\nunit_drivers \u0026lt;- sales %\u0026gt;% select(description, quantity) %\u0026gt;% group_by(description) %\u0026gt;% summarise(total_quantity = sum(quantity)) %\u0026gt;% filter(total_quantity \u0026gt;3) %\u0026gt;% ungroup() %\u0026gt;% arrange(desc(total_quantity)) %\u0026gt;% head(20)\runit_drivers %\u0026gt;% ggplot(aes(fct_reorder(description, total_quantity), total_quantity, label = total_quantity)) + geom_col(fill = \u0026quot;#303844\u0026quot;)+\rgeom_text(hjust = 1.1, color = \u0026quot;white\u0026quot;,fontface = \u0026quot;bold\u0026quot;)+\rcoord_flip()+\rtheme_minimal()+\rtheme(text = element_text(family = \u0026quot;Nunito Bold\u0026quot;, face = \u0026quot;bold\u0026quot;),\raxis.ticks = element_blank(),\rpanel.grid = element_blank()\r)+\rlabs(\rtitle = \u0026quot;Unit Drivers\u0026quot;,\rsubtitle = \u0026quot;For Calendar Year 2011\u0026quot;,\rx = \u0026quot;\u0026quot;,\ry = \u0026quot;Units\u0026quot;\r) -\u0026gt; graph_unit_drivers\rgraph_unit_drivers\rWe now have a graph of our top 20 unit drivers for the year 2011. If we can find inefficiencies in our sales process for these units, we can correct for them and increase our sales revenue due to the sheer volume of sales that these units produce.\n\rDollar Drivers\rLet’s run the same type of analysis and identify our top dollar drivers.\ndollar_drivers \u0026lt;- sales %\u0026gt;% select(description, invoice_total_value) %\u0026gt;% group_by(description) %\u0026gt;% summarise(total_dollars = sum(invoice_total_value)) %\u0026gt;% ungroup() %\u0026gt;% mutate(label_text = paste(\u0026quot;$\u0026quot;,round(total_dollars, digits = 2)),\rlabel_text = trimws(label_text))%\u0026gt;% arrange(desc(total_dollars))%\u0026gt;% head(20)\rdollar_drivers %\u0026gt;% ggplot(aes(fct_reorder(description, total_dollars), total_dollars, label = label_text)) + geom_col(fill = \u0026quot;#303844\u0026quot;)+\rgeom_text(hjust = 1.1, color = \u0026quot;white\u0026quot;,fontface = \u0026quot;bold\u0026quot;)+\rscale_y_continuous(labels=scales::dollar_format())+\rcoord_flip()+\rtheme_minimal()+\rtheme(text = element_text(family = \u0026quot;Nunito Bold\u0026quot;, face = \u0026quot;bold\u0026quot;),\raxis.ticks = element_blank(),\rpanel.grid = element_blank()\r)+\rlabs(\rtitle = \u0026quot;Dollar Drivers\u0026quot;,\rsubtitle = \u0026quot;For Calendar Year 2011\u0026quot;,\rx = \u0026quot;\u0026quot;,\ry = \u0026quot;\u0026quot;\r) -\u0026gt; graph_dollar_drivers\rgraph_dollar_drivers\rLooking at the two graphs we can see that a few SKU’s show up in both the dollar drivers and the unit drivers. For instance the Party Bunting, and the Pack of 72 Retrospot Cake Cases. It is safe to say that these two SKU’s make up an important part of the business.\n\rWhere in the World Are Our Sales?\rsales_by_country \u0026lt;- sales %\u0026gt;% select(country, invoice_total_value) %\u0026gt;%\rgroup_by(country) %\u0026gt;% summarise(total_sales_by_country = sum(invoice_total_value)) sales_by_country %\u0026gt;% arrange(desc(total_sales_by_country)) %\u0026gt;% gt() %\u0026gt;% fmt_currency(\r# Define the columns to change\rcolumns = vars(total_sales_by_country),\r# How many decimals to round to\rdecimals = 2,\r) %\u0026gt;%\r# Align the now character column to be right-aligned\rcols_align(\ralign = \u0026quot;right\u0026quot;,\rcolumns = vars(total_sales_by_country)) %\u0026gt;% cols_label(\rtotal_sales_by_country = \u0026quot;Total Sales\u0026quot;,\rcountry = \u0026quot;Country\u0026quot;\r) %\u0026gt;%\rtab_header(\rtitle = md(\u0026quot;**Sales by Country**\u0026quot;),\rsubtitle = \u0026quot;2011\u0026quot;\r)\rhtml {\rfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r}\r#ppldeepxvv .gt_table {\rdisplay: table;\rborder-collapse: collapse;\rmargin-left: auto;\rmargin-right: auto;\rcolor: #333333;\rfont-size: 16px;\rfont-weight: normal;\rfont-style: normal;\rbackground-color: #FFFFFF;\rwidth: auto;\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #A8A8A8;\rborder-right-style: none;\rborder-right-width: 2px;\rborder-right-color: #D3D3D3;\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #A8A8A8;\rborder-left-style: none;\rborder-left-width: 2px;\rborder-left-color: #D3D3D3;\r}\r#ppldeepxvv .gt_heading {\rbackground-color: #FFFFFF;\rtext-align: center;\rborder-bottom-color: #FFFFFF;\rborder-left-style: none;\rborder-left-width: 1px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 1px;\rborder-right-color: #D3D3D3;\r}\r#ppldeepxvv .gt_title {\rcolor: #333333;\rfont-size: 125%;\rfont-weight: initial;\rpadding-top: 4px;\rpadding-bottom: 4px;\rborder-bottom-color: #FFFFFF;\rborder-bottom-width: 0;\r}\r#ppldeepxvv .gt_subtitle {\rcolor: #333333;\rfont-size: 85%;\rfont-weight: initial;\rpadding-top: 0;\rpadding-bottom: 4px;\rborder-top-color: #FFFFFF;\rborder-top-width: 0;\r}\r#ppldeepxvv .gt_bottom_border {\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\r}\r#ppldeepxvv .gt_col_headings {\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #D3D3D3;\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rborder-left-style: none;\rborder-left-width: 1px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 1px;\rborder-right-color: #D3D3D3;\r}\r#ppldeepxvv .gt_col_heading {\rcolor: #333333;\rbackground-color: #FFFFFF;\rfont-size: 100%;\rfont-weight: normal;\rtext-transform: inherit;\rborder-left-style: none;\rborder-left-width: 1px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 1px;\rborder-right-color: #D3D3D3;\rvertical-align: bottom;\rpadding-top: 5px;\rpadding-bottom: 6px;\rpadding-left: 5px;\rpadding-right: 5px;\roverflow-x: hidden;\r}\r#ppldeepxvv .gt_column_spanner_outer {\rcolor: #333333;\rbackground-color: #FFFFFF;\rfont-size: 100%;\rfont-weight: normal;\rtext-transform: inherit;\rpadding-top: 0;\rpadding-bottom: 0;\rpadding-left: 4px;\rpadding-right: 4px;\r}\r#ppldeepxvv .gt_column_spanner_outer:first-child {\rpadding-left: 0;\r}\r#ppldeepxvv .gt_column_spanner_outer:last-child {\rpadding-right: 0;\r}\r#ppldeepxvv .gt_column_spanner {\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rvertical-align: bottom;\rpadding-top: 5px;\rpadding-bottom: 6px;\roverflow-x: hidden;\rdisplay: inline-block;\rwidth: 100%;\r}\r#ppldeepxvv .gt_group_heading {\rpadding: 8px;\rcolor: #333333;\rbackground-color: #FFFFFF;\rfont-size: 100%;\rfont-weight: initial;\rtext-transform: inherit;\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #D3D3D3;\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rborder-left-style: none;\rborder-left-width: 1px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 1px;\rborder-right-color: #D3D3D3;\rvertical-align: middle;\r}\r#ppldeepxvv .gt_empty_group_heading {\rpadding: 0.5px;\rcolor: #333333;\rbackground-color: #FFFFFF;\rfont-size: 100%;\rfont-weight: initial;\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #D3D3D3;\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rvertical-align: middle;\r}\r#ppldeepxvv .gt_from_md  :first-child {\rmargin-top: 0;\r}\r#ppldeepxvv .gt_from_md  :last-child {\rmargin-bottom: 0;\r}\r#ppldeepxvv .gt_row {\rpadding-top: 8px;\rpadding-bottom: 8px;\rpadding-left: 5px;\rpadding-right: 5px;\rmargin: 10px;\rborder-top-style: solid;\rborder-top-width: 1px;\rborder-top-color: #D3D3D3;\rborder-left-style: none;\rborder-left-width: 1px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 1px;\rborder-right-color: #D3D3D3;\rvertical-align: middle;\roverflow-x: hidden;\r}\r#ppldeepxvv .gt_stub {\rcolor: #333333;\rbackground-color: #FFFFFF;\rfont-size: 100%;\rfont-weight: initial;\rtext-transform: inherit;\rborder-right-style: solid;\rborder-right-width: 2px;\rborder-right-color: #D3D3D3;\rpadding-left: 12px;\r}\r#ppldeepxvv .gt_summary_row {\rcolor: #333333;\rbackground-color: #FFFFFF;\rtext-transform: inherit;\rpadding-top: 8px;\rpadding-bottom: 8px;\rpadding-left: 5px;\rpadding-right: 5px;\r}\r#ppldeepxvv .gt_first_summary_row {\rpadding-top: 8px;\rpadding-bottom: 8px;\rpadding-left: 5px;\rpadding-right: 5px;\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #D3D3D3;\r}\r#ppldeepxvv .gt_grand_summary_row {\rcolor: #333333;\rbackground-color: #FFFFFF;\rtext-transform: inherit;\rpadding-top: 8px;\rpadding-bottom: 8px;\rpadding-left: 5px;\rpadding-right: 5px;\r}\r#ppldeepxvv .gt_first_grand_summary_row {\rpadding-top: 8px;\rpadding-bottom: 8px;\rpadding-left: 5px;\rpadding-right: 5px;\rborder-top-style: double;\rborder-top-width: 6px;\rborder-top-color: #D3D3D3;\r}\r#ppldeepxvv .gt_striped {\rbackground-color: rgba(128, 128, 128, 0.05);\r}\r#ppldeepxvv .gt_table_body {\rborder-top-style: solid;\rborder-top-width: 2px;\rborder-top-color: #D3D3D3;\rborder-bottom-style: solid;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\r}\r#ppldeepxvv .gt_footnotes {\rcolor: #333333;\rbackground-color: #FFFFFF;\rborder-bottom-style: none;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rborder-left-style: none;\rborder-left-width: 2px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 2px;\rborder-right-color: #D3D3D3;\r}\r#ppldeepxvv .gt_footnote {\rmargin: 0px;\rfont-size: 90%;\rpadding: 4px;\r}\r#ppldeepxvv .gt_sourcenotes {\rcolor: #333333;\rbackground-color: #FFFFFF;\rborder-bottom-style: none;\rborder-bottom-width: 2px;\rborder-bottom-color: #D3D3D3;\rborder-left-style: none;\rborder-left-width: 2px;\rborder-left-color: #D3D3D3;\rborder-right-style: none;\rborder-right-width: 2px;\rborder-right-color: #D3D3D3;\r}\r#ppldeepxvv .gt_sourcenote {\rfont-size: 90%;\rpadding: 4px;\r}\r#ppldeepxvv .gt_left {\rtext-align: left;\r}\r#ppldeepxvv .gt_center {\rtext-align: center;\r}\r#ppldeepxvv .gt_right {\rtext-align: right;\rfont-variant-numeric: tabular-nums;\r}\r#ppldeepxvv .gt_font_normal {\rfont-weight: normal;\r}\r#ppldeepxvv .gt_font_bold {\rfont-weight: bold;\r}\r#ppldeepxvv .gt_font_italic {\rfont-style: italic;\r}\r#ppldeepxvv .gt_super {\rfont-size: 65%;\r}\r#ppldeepxvv .gt_footnote_marks {\rfont-style: italic;\rfont-size: 65%;\r}\r\r\rSales by Country\r\r\r2011\r\r\r\rCountry\rTotal Sales\r\r\r\rUnited Kingdom\r$652,672,300.00\r\r\rNetherlands\r$18,093,270.11\r\r\rAustralia\r$10,524,587.39\r\r\rEIRE\r$9,958,173.60\r\r\rGermany\r$7,728,452.33\r\r\rFrance\r$7,332,944.50\r\r\rSwitzerland\r$4,163,775.10\r\r\rSpain\r$2,172,299.21\r\r\rNorway\r$1,891,707.24\r\r\rPortugal\r$1,294,880.06\r\r\rBelgium\r$1,179,874.95\r\r\rJapan\r$931,334.20\r\r\rIsrael\r$905,426.91\r\r\rChannel Islands\r$858,722.68\r\r\rCyprus\r$848,770.76\r\r\rSweden\r$774,996.46\r\r\rFinland\r$735,092.37\r\r\rItaly\r$630,858.70\r\r\rSingapore\r$553,321.72\r\r\rHong Kong\r$522,479.73\r\r\rDenmark\r$466,853.60\r\r\rAustria\r$307,311.71\r\r\rUnspecified\r$189,661.49\r\r\rPoland\r$168,920.07\r\r\rCanada\r$163,279.88\r\r\rGreece\r$147,157.84\r\r\rIceland\r$134,181.24\r\r\rMalta\r$87,997.60\r\r\rLebanon\r$76,224.60\r\r\rUnited Arab Emirates\r$62,809.68\r\r\rRSA\r$58,133.98\r\r\rUSA\r$38,928.34\r\r\rBrazil\r$36,595.20\r\r\rLithuania\r$32,208.50\r\r\rEuropean Community\r$29,123.05\r\r\rCzech Republic\r$10,779.66\r\r\rBahrain\r$6,328.20\r\r\rSaudi Arabia\r$1,298.53\r\r\r\rThe vast, vast majority of the yearly sales came from the UK. Considering that this business is based there, that makes sense. Looking at our lowest value countries, We have Saudi Arabia, Bahrain and The Czech Republic. If there is marketing dollars being spent there currently, it may be wise to move it else where.\n\r\rWrap Up\rWe took a look at our sales data from this anonymized store data set. We look at unit drivers, dollar drivers and which countries produced the most sales. In the future it would be beneficial to examine customer segmentation, perhaps utilizing KNN. I will save that for a future blog post however.\n\r","date":1601164800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601236551,"objectID":"0c66a7cef40f01d6f6d086a181fb8cbd","permalink":"/post/customer-analysis-eda/","publishdate":"2020-09-27T00:00:00Z","relpermalink":"/post/customer-analysis-eda/","section":"post","summary":"library(tidyverse)\rlibrary(lubridate) #used to parse date and time in our data cleaning step.\rlibrary(gt)\rObjective\rTaking the data set provided by the UCI Machine Learning Repository, we want to take an exploratory data analysis approach to gain insights into this store’s customer.","tags":["EDA","Customer Analysis","R"],"title":"Customer Analysis - EDA","type":"post"},{"authors":[],"categories":["Tidy Tuesday"],"content":"\rLibrary and Data\rLet’s load in our data and libraries. Our data comes from the European Energy Tidy Tuesday data set.\nlibrary(tidyverse)\renergy_types \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv\u0026#39;)\rcountry_totals \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv\u0026#39;)\r\rQuick EDA\rLet’s take a quick look at our data.\nskimr::skim(energy_types)\r\rTable 1: Data summary\r\rName\renergy_types\r\rNumber of rows\r296\r\rNumber of columns\r7\r\r_______________________\r\r\rColumn type frequency:\r\r\rcharacter\r4\r\rnumeric\r3\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: character\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rempty\rn_unique\rwhitespace\r\r\r\rcountry\r0\r1.00\r2\r2\r0\r37\r0\r\rcountry_name\r8\r0.97\r5\r20\r0\r36\r0\r\rtype\r0\r1.00\r4\r20\r0\r8\r0\r\rlevel\r0\r1.00\r7\r7\r0\r2\r0\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\r2016\r0\r1\r12783.36\r41066.36\r0\r0\r373.28\r5677.25\r390141.0\r▇▁▁▁▁\r\r2017\r0\r1\r12910.96\r41029.50\r0\r0\r351.89\r5924.46\r379094.0\r▇▁▁▁▁\r\r2018\r0\r1\r12796.20\r39423.36\r0\r0\r278.35\r6790.15\r393153.2\r▇▁▁▁▁\r\r\r\rIn our energy_types data set we’ve got 37 different countries, however we are missing 1 country name it seems. Let see which one is missing.\nenergy_types %\u0026gt;% filter(is.na(country_name))\r## # A tibble: 8 x 7\r## country country_name type level `2016` `2017` `2018`\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 UK \u0026lt;NA\u0026gt; Conventional thermal Level 1 203165. 189297. 180838.\r## 2 UK \u0026lt;NA\u0026gt; Nuclear Level 1 65149. 63887. 59098.\r## 3 UK \u0026lt;NA\u0026gt; Hydro Level 1 8287. 8723. 7679.\r## 4 UK \u0026lt;NA\u0026gt; Pumped hydro power Level 2 2949. 2862. 2516.\r## 5 UK \u0026lt;NA\u0026gt; Wind Level 1 37263. 50004. 56904.\r## 6 UK \u0026lt;NA\u0026gt; Solar Level 1 10411. 11525. 12857.\r## 7 UK \u0026lt;NA\u0026gt; Geothermal Level 1 0 0 0 ## 8 UK \u0026lt;NA\u0026gt; Other Level 1 0 0 0\rThe United Kingdom is our country name that is missing. Lets fix that.\nenergy_types \u0026lt;- energy_types %\u0026gt;% mutate(country_name = case_when(\rcountry == \u0026quot;UK\u0026quot; ~ \u0026quot;United Kingdom\u0026quot;,\rTRUE ~ country_name\r))\rskimr::skim(energy_types)\r\rTable 2: Data summary\r\rName\renergy_types\r\rNumber of rows\r296\r\rNumber of columns\r7\r\r_______________________\r\r\rColumn type frequency:\r\r\rcharacter\r4\r\rnumeric\r3\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: character\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rempty\rn_unique\rwhitespace\r\r\r\rcountry\r0\r1\r2\r2\r0\r37\r0\r\rcountry_name\r0\r1\r5\r20\r0\r37\r0\r\rtype\r0\r1\r4\r20\r0\r8\r0\r\rlevel\r0\r1\r7\r7\r0\r2\r0\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\r2016\r0\r1\r12783.36\r41066.36\r0\r0\r373.28\r5677.25\r390141.0\r▇▁▁▁▁\r\r2017\r0\r1\r12910.96\r41029.50\r0\r0\r351.89\r5924.46\r379094.0\r▇▁▁▁▁\r\r2018\r0\r1\r12796.20\r39423.36\r0\r0\r278.35\r6790.15\r393153.2\r▇▁▁▁▁\r\r\r\rWe’ve now got a full data set for energy_types.\nLets take a quick look at the country_totals data set.\nskimr::skim(country_totals)\r\rTable 3: Data summary\r\rName\rcountry_totals\r\rNumber of rows\r185\r\rNumber of columns\r7\r\r_______________________\r\r\rColumn type frequency:\r\r\rcharacter\r4\r\rnumeric\r3\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: character\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rempty\rn_unique\rwhitespace\r\r\r\rcountry\r0\r1.00\r2\r2\r0\r37\r0\r\rcountry_name\r5\r0.97\r5\r20\r0\r36\r0\r\rtype\r0\r1.00\r7\r26\r0\r5\r0\r\rlevel\r0\r1.00\r5\r5\r0\r1\r0\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\r2016\r1\r0.99\r45207.06\r99814.70\r0\r1620.50\r8426.0\r29583.31\r614155.0\r▇▁▁▁▁\r\r2017\r0\r1.00\r45413.37\r100337.16\r0\r2204.74\r8189.7\r30676.00\r619059.0\r▇▁▁▁▁\r\r2018\r0\r1.00\r45062.34\r98010.77\r0\r2186.68\r8326.0\r31671.10\r571799.7\r▇▁▁▁▁\r\r\r\rThis time we have 5 country_names missing from our data set. Lets fix that as well.\ncountry_totals %\u0026gt;% filter(is.na(country_name))\r## # A tibble: 5 x 7\r## country country_name type level `2016` `2017` `2018`\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 UK \u0026lt;NA\u0026gt; Total net production Total 324274. 323440. 317376.\r## 2 UK \u0026lt;NA\u0026gt; Imports Total 20018. 18167. 21332.\r## 3 UK \u0026lt;NA\u0026gt; Exports Total 2273. 3407. 2225.\r## 4 UK \u0026lt;NA\u0026gt; Energy absorbed by pumping Total 4014. 3859. 3391.\r## 5 UK \u0026lt;NA\u0026gt; Energy supplied Total 338005. 334340. 333092.\rcountry_totals \u0026lt;- country_totals %\u0026gt;% mutate(country_name = case_when(\rcountry == \u0026quot;UK\u0026quot; ~ \u0026quot;United Kingdom\u0026quot;,\rTRUE ~ country_name\r))\rskimr::skim(country_totals)\r\rTable 4: Data summary\r\rName\rcountry_totals\r\rNumber of rows\r185\r\rNumber of columns\r7\r\r_______________________\r\r\rColumn type frequency:\r\r\rcharacter\r4\r\rnumeric\r3\r\r________________________\r\r\rGroup variables\rNone\r\r\r\rVariable type: character\n\r\rskim_variable\rn_missing\rcomplete_rate\rmin\rmax\rempty\rn_unique\rwhitespace\r\r\r\rcountry\r0\r1\r2\r2\r0\r37\r0\r\rcountry_name\r0\r1\r5\r20\r0\r37\r0\r\rtype\r0\r1\r7\r26\r0\r5\r0\r\rlevel\r0\r1\r5\r5\r0\r1\r0\r\r\r\rVariable type: numeric\n\r\rskim_variable\rn_missing\rcomplete_rate\rmean\rsd\rp0\rp25\rp50\rp75\rp100\rhist\r\r\r\r2016\r1\r0.99\r45207.06\r99814.70\r0\r1620.50\r8426.0\r29583.31\r614155.0\r▇▁▁▁▁\r\r2017\r0\r1.00\r45413.37\r100337.16\r0\r2204.74\r8189.7\r30676.00\r619059.0\r▇▁▁▁▁\r\r2018\r0\r1.00\r45062.34\r98010.77\r0\r2186.68\r8326.0\r31671.10\r571799.7\r▇▁▁▁▁\r\r\r\rNow that we have our country_names updated. Lets actually take a look and see what is contained within our data sets.\ncountry_totals %\u0026gt;% head(10) %\u0026gt;% knitr::kable()\r\r\rcountry\rcountry_name\rtype\rlevel\r2016\r2017\r2018\r\r\r\rBE\rBelgium\rTotal net production\rTotal\r82520\r82948.500\r69212.347\r\rBE\rBelgium\rImports\rTotal\r14648\r14189.400\r21635.908\r\rBE\rBelgium\rExports\rTotal\r8465\r8167.800\r4308.347\r\rBE\rBelgium\rEnergy absorbed by pumping\rTotal\r1475\r1485.400\r1347.901\r\rBE\rBelgium\rEnergy supplied\rTotal\r87228\r87484.700\r85192.007\r\rBG\rBulgaria\rTotal net production\rTotal\r41221\r41351.303\r41705.000\r\rBG\rBulgaria\rImports\rTotal\r4568\r3705.423\r2223.000\r\rBG\rBulgaria\rExports\rTotal\r10940\r9185.794\r10030.000\r\rBG\rBulgaria\rEnergy absorbed by pumping\rTotal\r918\r949.527\r425.000\r\rBG\rBulgaria\rEnergy supplied\rTotal\r33931\r34921.405\r33473.000\r\r\r\renergy_types %\u0026gt;% head(10) %\u0026gt;% knitr::kable()\r\r\rcountry\rcountry_name\rtype\rlevel\r2016\r2017\r2018\r\r\r\rBE\rBelgium\rConventional thermal\rLevel 1\r30728\r31316.00\r30092.635\r\rBE\rBelgium\rNuclear\rLevel 1\r41430\r40128.50\r26995.628\r\rBE\rBelgium\rHydro\rLevel 1\r1476\r1360.90\r1239.248\r\rBE\rBelgium\rPumped hydro power\rLevel 2\r1110\r1093.20\r983.190\r\rBE\rBelgium\rWind\rLevel 1\r5340\r6387.90\r7177.346\r\rBE\rBelgium\rSolar\rLevel 1\r3070\r3264.30\r3488.979\r\rBE\rBelgium\rGeothermal\rLevel 1\r0\r0.00\r0.000\r\rBE\rBelgium\rOther\rLevel 1\r476\r490.90\r218.509\r\rBG\rBulgaria\rConventional thermal\rLevel 1\r18909\r20234.21\r19334.000\r\rBG\rBulgaria\rNuclear\rLevel 1\r14932\r14718.37\r15290.000\r\r\r\rLooking at our country_totals data set, it looks like we have a summary of a country’s energy export/import. Where as the energy_types data set contains a breakdown of a country actual energy use by type. Looking at the levels vector, we have a Level 2 level. A tweet from Tom Mock outlines that we do not need to factor this into our data, as it is a subset of hydro. This means to include it would be to double count hydro. We can filter these entries out. Our raw energy totals are in Gigawatt Hours\nenergy_type_l2 \u0026lt;- energy_types %\u0026gt;% filter(level != \u0026quot;Level 2\u0026quot;) \r\rVisualization\rI want visualize a breakdown of each country’s energy use by production method for the year of 2018. Lets see what we can come up with.\nenergy_type_l2 %\u0026gt;% select(-c(`2016`,`2017`)) %\u0026gt;% ggplot(aes(country_name, `2018`, fill = type))+ #try and get a reorder\rgeom_col()+\rcoord_flip() -\u0026gt;p_0\rp_0\rThis first plot is nice but it’s hard to compare between countries. We need to reorder our country name somehow. Let add together the total energy usage by type to see how much total energy each country used and use that to order our plot.\nenergy_total \u0026lt;- energy_type_l2 %\u0026gt;% select(-c(`2016`, `2017`)) %\u0026gt;% group_by(country_name) %\u0026gt;% mutate(\renergy_total = sum(`2018`)/1000,\r`2018` = `2018`/1000\r)\renergy_total\r## # A tibble: 259 x 6\r## # Groups: country_name [37]\r## country country_name type level `2018` energy_total\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 BE Belgium Conventional thermal Level 1 30.1 69.2\r## 2 BE Belgium Nuclear Level 1 27.0 69.2\r## 3 BE Belgium Hydro Level 1 1.24 69.2\r## 4 BE Belgium Wind Level 1 7.18 69.2\r## 5 BE Belgium Solar Level 1 3.49 69.2\r## 6 BE Belgium Geothermal Level 1 0 69.2\r## 7 BE Belgium Other Level 1 0.219 69.2\r## 8 BG Bulgaria Conventional thermal Level 1 19.3 41.7\r## 9 BG Bulgaria Nuclear Level 1 15.3 41.7\r## 10 BG Bulgaria Hydro Level 1 4.69 41.7\r## # ... with 249 more rows\rNow lets try making our graph again.\nenergy_total %\u0026gt;% ggplot(aes(fct_reorder(country_name, energy_total), `2018`, fill = type))+\rgeom_col()+\rtheme(\r#axis.title.x = element_blank(),\raxis.title.y = element_blank()\r)+\rlabs(\rfill = \u0026quot;Total Energy Consumption by Production Method\r(Per 1000 Gigawatts)\u0026quot;)+\rcoord_flip() -\u0026gt; p_1\rp_1\rThis is a lot easier to read! We can see how Germany France and the U.K. are Europe’s largest consumer of energy. However this also makes it difficult to compare the largest energy consumers to the smallest. Let’s see if we can look at the proportion of energy used by each instead. We start by building a proportion column.\nenergy_prop \u0026lt;- energy_total %\u0026gt;% group_by(country) %\u0026gt;% mutate(\rprop = `2018`/energy_total\r)\rWe now have a proportion of energy consumption by type that we can use to compare each country. Lets take a look.\nenergy_prop %\u0026gt;% ggplot(aes(country_name, prop , fill = type))+\rgeom_col()+\rcoord_flip()\rThis is cool, we have a way to compare countries in their energy use. For instance on the bottom, we can see that Albania uses nearly all hyrdo power as their many energy source. Lets put them in order of their total energy consumption so that we can reference total energy to their proportion of use.\nenergy_prop %\u0026gt;% ggplot(aes(fct_reorder(country_name, energy_total), prop, fill = type))+\rgeom_col()+\r# scale_y_continuous(labels = scales::percent)+\rcoord_flip() +\rtheme(\r#axis.title.x = element_blank(),\raxis.title.y = element_blank()\r)+\rlabs(\ry = \u0026quot;% of Energy Consumption by Production Method\u0026quot;\r) -\u0026gt; p_2\rp_2\rNow that we have our two plots in the same order, lets take a look at them side by side.\nplot_joined \u0026lt;- cowplot::plot_grid(p_1, p_2, cols = 2)\rplot_joined \rThis is a super neat plot. Some insights provided by this graph:\n\rGermany, The Netherlands and Poland still have work to do in terms of their conventional energy use.\rFrance is the largest user of nuclear energy in both absolute and relative terms.\rNorway and Albania both receive over 95% of their energy from hydro power\r\r\r","date":1596931200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597017797,"objectID":"2b607bea02d064fafd099130ba9d3559","permalink":"/post/european-energy-tidy-tuesday/","publishdate":"2020-08-09T00:00:00Z","relpermalink":"/post/european-energy-tidy-tuesday/","section":"post","summary":"Library and Data\rLet’s load in our data and libraries. Our data comes from the European Energy Tidy Tuesday data set.\nlibrary(tidyverse)\renergy_types \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv\u0026#39;)\rcountry_totals \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv\u0026#39;)\r\rQuick EDA\rLet’s take a quick look at our data.","tags":["R","Tidy Tuesday","EDA","Europe"],"title":"European Energy (Tidy Tuesday)","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"}]